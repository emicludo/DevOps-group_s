---
name: Continuous Integration

on:
  pull_request: {}
  # allow manual triggers for now too
  workflow_dispatch:
    manual: true

# Remember to set the following secrets in your repository's settings:
# https://github.com/your_username/itu-minitwit-ci/settings/secrets/actions
# DOCKER_USERNAME
# DOCKER_PASSWORD
# SSH_USER
# SSH_KEY
# SSH_HOST

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push minitwit-tests image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./itu-minitwit-node/tests/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwit-tests:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit-tests:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit-tests:webbuildcache,mode=max

      - name: Test minitwit
        run: |
          docker build -t minitwit-tests -f ./itu-minitwit-node/tests/Dockerfile .
          docker run --rm -e MYSQL_PASSWORD=$MYSQL_PASSWORD   -e MYSQL_USERNAME=$MYSQL_USERNAME   -e MYSQL_HOST=$MYSQL_HOST   -e MYSQL_PORT=$MYSQL_PORT   -e MYSQL_DATABASE=$MYSQL_DATABASE minitwit-tests
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}

      - name: Build and push minitwitimage image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./itu-minitwit-node/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwitimage:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwitimage:webbuildcache,mode=max
      
      - name: Build and push Flag tool image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./flag_tool/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flag-tool:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flag-tool:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flag-tool:webbuildcache,mode=max

      - name: Build and push Filebeat
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./filebeat/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/filebeat:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/filebeat:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/filebeat:webbuildcache,mode=max

          
